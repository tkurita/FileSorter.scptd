{\rtf1\ansi\ansicpg932\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset128 Osaka;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green0\blue0;\red0\green0\blue255;\red64\green128\blue0;
\red76\green78\blue78;}
\deftab480
\pard\pardeftab480\ql\qnatural\pardirnatural

\f0\fs24 \cf2 property
\f1 \cf0  
\f0 \cf3 name
\f1 \cf0  
\f0 :
\f1  
\f0 "FileSorter"
\f1 \

\f0 \cf2 property
\f1 \cf0  
\f0 \cf3 version
\f1 \cf0  
\f0 :
\f1  
\f0 "3.1.2"
\f1 \
\

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 SortEngine
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 module
\f1 \cf0 \

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 XList
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 module
\f1 \cf0 \
\

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _info_handler
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _text_classes
\f1 \cf0  
\f0 :
\f1  
\f0 \{\cf3 text\cf0 ,
\f1  
\f0 \cf3 Unicode text\cf0 ,
\f1  
\f0 \cf3 string\cf0 \}
\f1 \
\

\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 PointComparator
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf3 module loaded
\f1 \cf0 \
	
\f0 \cf2 script
\f1 \cf0  
\f0 \cf4 PointComparator
\f1 \cf0 \
		
\f0 \cf2 property
\f1 \cf0  
\f0 \cf3 parent
\f1 \cf0  
\f0 :
\f1  
\f0 \cf4 SortEngine\cf0 's
\f1  
\f0 \cf4 base_comparator\cf0 ()
\f1 \
		
\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _compare_order
\f1 \cf0  
\f0 :
\f1  
\f0 \{1,
\f1  
\f0 2\}
\f1 \
		\
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 set_compare_order\cf0 (\cf4 a_list\cf0 )
\f1 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _compare_order
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 set_compare_order
\f1 \cf0 \
		\
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 do\cf0 (\cf4 a_first\cf0 ,
\f1  
\f0 \cf4 a_second\cf0 )
\f1 \
			
\f0 \cf2 repeat
\f1 \cf0  
\f0 \cf2 with
\f1 \cf0  
\f0 \cf4 ith
\f1 \cf0  
\f0 \cf2 from
\f1 \cf0  
\f0 1
\f1  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 length
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _compare_order
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 an_index
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 item
\f1 \cf0  
\f0 \cf4 ith
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _compare_order
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_result
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 continue
\f1 \cf0  
\f0 \cf4 do\cf0 (\cf3 item
\f1 \cf0  
\f0 \cf4 an_index
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_first\cf0 ,
\f1  
\f0 \cf3 item
\f1 \cf0  
\f0 \cf4 an_index
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_second\cf0 )
\f1 \
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 a_result
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 0
\f1  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 exit
\f1 \cf0  
\f0 \cf2 repeat
\f1 \cf0 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 repeat
\f1 \cf0 \
			\
			
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 a_result
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 do
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 script
\f1 \cf0 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 PointComparator
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 PointComparator
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf3 module loaded
\f1 \cf0 \
\

\f0 (*\cf5 !@title FileSorter Reference\
* Version : 3.1.2\
* Author : Tetsuro KURITA ((<tkurita@mac.com>))\
\cf0 *)
\f1 \
\

\f0 (*\cf5 !@group Constructor Methods \cf0 *)
\f1 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
FileSorter \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'f0\'90\'b6\'90\'ac\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Make a new FileSorter instance\
<!-- end locale -->\
@result script object :\
<!-- begin locale ja -->FileSorter \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\
<!-- begin locale en -->a new FileSorter instance<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf3 make
\f1 \cf0 \
	
\f0 \cf2 script
\f1 \cf0  
\f0 \cf4 FileSorter
\f1 \cf0 \
		
\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \
		
\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _info_handler
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \
		
\f0 \cf2 property
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 :
\f1  
\f0 \cf3 missing value
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 script
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf3 make
\f1 \cf0 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
delegate \'82\'f0\'90\'dd\'92\'e8\'82\'b5\'82\'bd\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'90\'b6\'90\'ac\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Make a new instance with setting delegate.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
delegate \'82\'c6\'82\'c8\'82\'e9 script object \'82\'cd\'81\'41((<resolve_container>)), ((<target_items_at>)), ((<is_rowwise_for_iconview>)) \'82\'cc\'89\'bd\'82\'ea\'82\'a9\'81\'41\'82\'e0\'82\'b5\'82\'ad\'82\'cd\'82\'b7\'82\'d7\'82\'c4\'82\'f0\'8e\'c0\'91\'95\'82\'b7\'82\'e9\'82\'b1\'82\'c6\'82\'c9\'82\'e6\'82\'e9\'81\'41FileSorter \'82\'cc\'93\'ae\'8d\'ec\'82\'f0\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
A delegate script object can customize behavior of FileSorter by implementation of handlers ((<resolve_container>)), ((<target_items_at>)) or ((<is_rowwise_for_iconview>)).\
<!-- end locale -->\
@param a_script : \
<!-- begin locale ja -->delegate \'82\'c6\'82\'c8\'82\'e9 script object\
<!-- begin locale en -->a script object for the delegate\
<!-- end locale -->\
@result script object : \
<!-- begin locale ja -->FileSorter \'82\'cc\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\
<!-- begin locale en -->a new FileSorter instance<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 make_with_delegate\cf0 (\cf4 a_script\cf0 )
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 an_instance
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 make
\f1 \cf0 \
	
\f0 \cf4 an_instance\cf0 's
\f1  
\f0 \cf4 set_delegate\cf0 (\cf4 a_script\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 an_instance
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 make_with_delegate
\f1 \cf0 \
\

\f0 (*\cf5 !@group Accessor Methods \cf0 *)
\f1 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
delegate \'82\'f0\'90\'dd\'92\'e8\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
set a delegate script into the instance.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
delegate \'82\'c6\'82\'c8\'82\'e9 script object \'82\'cd\'81\'41((<resolve_container>)), ((<target_items_at>)), ((<is_rowwise_for_iconview>)) \'82\'cc\'89\'bd\'82\'ea\'82\'a9\'81\'41\'82\'e0\'82\'b5\'82\'ad\'82\'cd\'82\'b7\'82\'d7\'82\'c4\'82\'f0\'8e\'c0\'91\'95\'82\'b7\'82\'e9\'82\'b1\'82\'c6\'82\'c9\'82\'e6\'82\'e9\'81\'41FileSorter \'82\'cc\'93\'ae\'8d\'ec\'82\'f0\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
A delegate script object can customize behavior of FileSorter by implementation of handlers ((<resolve_container>)), ((<target_items_at>)) or ((<is_rowwise_for_iconview>)).\
<!-- end locale -->\
@param a_script (script object) : \
<!-- begin locale ja -->\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'cc delegate \'82\'c9\'90\'dd\'92\'e8\'82\'b7\'82\'e9 script object\
<!-- begin locale en -->a script object for the delegate\
<!-- end locale -->\
@result script object : me\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 set_delegate\cf0 (\cf4 a_script\cf0 )
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_script
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 me
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 set_delegate
\f1 \cf0 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
\'90\'dd\'92\'e8\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'e9 delegate \'82\'f0\'95\'d4\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Return a delegate script object of the instance.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
delegate \'82\'aa\'90\'dd\'92\'e8\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'c8\'82\'a2\'82\'c6\'82\'ab\'82\'cd\'81\'41missing value \'82\'f0\'95\'d4\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
If the instance does not have a delegate, missing value is returned.\
<!-- end locale -->\
@result script object :\
<!-- begin locale ja -->\'83\'43\'83\'93\'83\'58\'83\'5e\'83\'93\'83\'58\'82\'c9 delegate \'82\'c6\'82\'b5\'82\'c4\'90\'dd\'92\'e8\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'e9 script object\
<!-- begin locale en -->a script object set as a delegate.<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 delegate\cf0 ()
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 delegate
\f1 \cf0 \
\

\f0 (*\cf5  handlers for sort_by_view \cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_name\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 name
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 info for
\f1 \cf0  
\f0 \cf4 an_item\cf0 )
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_name
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_position\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 position
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 item
\f1 \cf0  
\f0 (\cf4 an_item
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 Unicode text\cf0 ))
\f1 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_position
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_moddate\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 modification date
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 info for
\f1 \cf0  
\f0 \cf4 an_item\cf0 )
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_moddate
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_creationdate\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 creation date
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 info for
\f1 \cf0  
\f0 \cf4 an_item\cf0 )
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_creationdate
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_size\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 size
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 info for
\f1 \cf0  
\f0 \cf4 an_item\cf0 )
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_size
\f1 \cf0 \
\

\f0 (*\cf5 \
on distill_kind(an_item)\
	tell application "Finder"\
		return kind of an_item\
	end tell\
end distill_kind\
\cf0 *)
\f1 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_version\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 theInfo
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 info for
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 short version
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 theInfo
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_version
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 distill_comment\cf0 (\cf4 an_item\cf0 )
\f1 \
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 comment
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 distill_comment
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 is_invalid_list\cf0 (\cf4 a_list\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 (\cf4 a_list
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 missing value\cf0 )
\f1  
\f0 \cf2 or
\f1 \cf0  
\f0 ((\cf3 count
\f1 \cf0  
\f0 \cf4 a_list\cf0 )
\f1  
\f0 \cf2 is
\f1 \cf0  
\f0 0)
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 is_invalid_list
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 build_sort_table\cf0 ()
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 item_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0 \
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 try
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 item_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate\cf0 's
\f1  
\f0 \cf4 target_items_at\cf0 (\cf2 my
\f1 \cf0  
\f0 \cf4 _target_container\cf0 )
\f1 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \
	
\f0 \cf2 else
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 item_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 target_items_at\cf0 (\cf2 my
\f1 \cf0  
\f0 \cf4 _target_container\cf0 )
\f1 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 is_invalid_list\cf0 (\cf4 item_list\cf0 )
\f1  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 item_list
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 keylist
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \{\}
\f1 \
	
\f0 \cf2 repeat
\f1 \cf0  
\f0 \cf2 with
\f1 \cf0  
\f0 \cf4 ith
\f1 \cf0  
\f0 \cf2 from
\f1 \cf0  
\f0 1
\f1  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 length
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 item_list
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 keylist
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _info_handler\cf0 (\cf3 item
\f1 \cf0  
\f0 \cf4 ith
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 item_list\cf0 )
\f1 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 repeat
\f1 \cf0 \
	
\f0 --\cf5 log "end build_sort_table"
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \{\cf4 item_list\cf0 ,
\f1  
\f0 \cf4 keylist\cf0 \}
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 build_sort_table
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf4 sort_key\cf0 )
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 source_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 target_items_at\cf0 (\cf2 my
\f1 \cf0  
\f0 \cf4 _target_container\cf0 )
\f1 \
	\
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 is_invalid_list\cf0 (\cf4 source_list\cf0 )
\f1  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 source_list
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 sorted_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 sort
\f1 \cf0  
\f0 \cf4 source_list
\f1 \cf0  
\f0 \cf3 by
\f1 \cf0  
\f0 \cf4 sort_key
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \
	\
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf3 class
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf3 item
\f1 \cf0  
\f0 1
\f1  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 source_list
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 in
\f1 \cf0  
\f0 \cf4 _text_classes
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 script
\f1 \cf0  
\f0 \cf4 to_hfspath
\f1 \cf0 \
			
\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 do\cf0 (\cf4 an_item\cf0 )
\f1 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf3 contents
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 Unicode text
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 do
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 script
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 fileref_converter
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 to_hfspath
\f1 \cf0 \
	
\f0 \cf2 else
\f1 \cf0 \
		
\f0 \cf2 script
\f1 \cf0  
\f0 \cf4 to_alias
\f1 \cf0 \
			
\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 do\cf0 (\cf4 an_item\cf0 )
\f1 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf3 contents
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 do
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 script
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 fileref_converter
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 to_alias
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 sorted_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 XList\cf0 's
\f1  
\f0 \cf4 make_with\cf0 (\cf4 sorted_list\cf0 )
\f1 \
	
\f0 \cf4 sorted_list\cf0 's
\f1  
\f0 \cf4 each\cf0 (\cf4 fileref_converter\cf0 )
\f1 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 sorted_list\cf0 's
\f1  
\f0 \cf4 list_ref\cf0 ()
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 sort_by
\f1 \cf0 \
\

\f0 (*\cf5 !@group Instance Methods \cf0 *)
\f1 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
Finder \'82\'cc\'95\'5c\'8e\'a6\'82\'c9\'8f\'5d\'82\'c1\'82\'c4\'83\'5c\'81\'5b\'83\'67\'82\'b3\'82\'ea\'82\'bd\'83\'74\'83\'40\'83\'43\'83\'8b/\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc\'83\'8a\'83\'58\'83\'67\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Return a sorted list of files/folders according to the view of Finder.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
\'83\'5c\'81\'5b\'83\'67\'82\'b7\'82\'e9\'8d\'80\'96\'da\'81\'41Finder \'82\'cc\'95\'5c\'8e\'a6\'8c\'60\'8e\'ae\'82\'f0\'8e\'51\'8f\'c6\'82\'b7\'82\'e9\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cd delegate \'82\'c9\'82\'e6\'82\'c1\'82\'c4\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
The delegate can customize Items to be sorted and a folder of which view determine the sorting order.\
<!-- end locale -->\
@result list : \
<!-- begin locale ja -->\'83\'5c\'81\'5b\'83\'67\'82\'b3\'82\'ea\'82\'bd\'83\'74\'83\'40\'83\'43\'83\'8b/\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc\'83\'8a\'83\'58\'83\'67\
<!-- begin locale en -->a sorted list of files and folders.<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 sorted_items\cf0 ()
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_container
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 resolve_container\cf0 ()
\f1 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_sorter
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 make
\f1 \cf0  
\f0 \cf4 SortEngine
\f1 \cf0 \
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 if
\f1 \cf0  
\f0 \cf3 class
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_container
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 Finder window
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_window
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_container
\f1 \cf0 \
		
\f0 \cf2 else
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_window
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 container window
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_container
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_view
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 current view
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_window
\f1 \cf0 \
		\
		
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 a_view
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 icon view
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
			
\f0 --\cf5 log "is icon view"
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 view_options
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 icon view options
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_window
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 arrangement
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 view_options
\f1 \cf0 \
			
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 in
\f1 \cf0  
\f0 \{\cf3 not arranged\cf0 ,
\f1  
\f0 \cf3 snap to grid\cf0 \}
\f1  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf4 a_sorter\cf0 's
\f1  
\f0 \cf4 set_comparator\cf0 (\cf4 PointComparator\cf0 )
\f1 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _info_handler
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 distill_position
\f1 \cf0 \
				\
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 is_rowwise_for_iconview\cf0 (\cf4 view_options\cf0 )
\f1  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf4 PointComparator\cf0 's
\f1  
\f0 \cf4 set_compare_order\cf0 (\{2,
\f1  
\f0 1\})
\f1 \
				
\f0 \cf2 else
\f1 \cf0 \
					
\f0 \cf4 PointComparator\cf0 's
\f1  
\f0 \cf4 set_compare_order\cf0 (\{1,
\f1  
\f0 2\})
\f1 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
				\
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_table
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 build_sort_table\cf0 ()
\f1 \
				\
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 is_invalid_list\cf0 (\cf4 a_table\cf0 )
\f1  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 a_table
\f1 \cf0 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 first
\f1 \cf0  
\f0 \cf3 item
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf4 a_sorter\cf0 's
\f1  
\f0 \cf4 sort_table\cf0 (\cf4 a_table\cf0 ,
\f1  
\f0 -1))
\f1 \
				\
			
\f0 \cf2 else
\f1 \cf0 \
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by name
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 name\cf0 )
\f1 \
				
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by modification date
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 modification date\cf0 )
\f1 \
				
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by creation date
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 creation date\cf0 )
\f1 \
				
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by size
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 physical size\cf0 )
\f1 \
				
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by kind
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 kind\cf0 )
\f1 \
				
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 an_arrangement
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 arranged by label
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 label index\cf0 )
\f1 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			\
		
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 a_view
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 column view
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 name\cf0 )
\f1 \
			\
		
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 a_view
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 in
\f1 \cf0  
\f0 \{\cf3 list view\cf0 ,
\f1  
\f0 \cf3 flow view\cf0 \}
\f1  
\f0 \cf2 then
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 view_options
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 list view options
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_window
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 sort_column
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 sort column
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 view_options
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 name
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 sort_column
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 (\cf3 sort direction
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 sort_column
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 reversed\cf0 )
\f1 \
			\
			
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 name column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 name\cf0 )
\f1 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 modification date column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 modification date\cf0 )
\f1 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 creation date column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 creation date\cf0 )
\f1 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 size column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 physical size\cf0 )
\f1 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 kind column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 kind\cf0 )
\f1 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 label column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 label index\cf0 )
\f1 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 version column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 version\cf0 )
\f1 \
			
\f0 \cf2 else
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 column_name
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 comment column
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 sort_by\cf0 (\cf2 a reference
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 comment\cf0 )
\f1 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			\
			
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 is_descending
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 is_invalid_list\cf0 (\cf4 a_list\cf0 )
\f1  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 reverse
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
		
\f0 \cf2 else
\f1 \cf0 \
			
\f0 \cf2 error
\f1 \cf0  
\f0 "The FInder Window is Unknown view."
\f1  
\f0 \cf3 number
\f1 \cf0  
\f0 972
\f1 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \
	\
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 sorted_items
\f1 \cf0 \
\

\f0 (*\cf5 !@group Delegate Methods \
<!-- begin locale ja -->\
((<make_with_delegate>))\'81\'41((<set_delegate>)) \'82\'c9\'88\'c8\'89\'ba\'82\'cc\'82\'a2\'82\'b8\'82\'ea\'82\'a9\'82\'cc\'83\'6e\'83\'93\'83\'68\'83\'89\'82\'f0\'8e\'c0\'91\'95\'82\'b5\'82\'bd\'83\'58\'83\'4e\'83\'8a\'83\'76\'83\'67\'82\'f0\'97\'5e\'82\'a6\'82\'e9\'82\'b1\'82\'c6\'82\'c9\'82\'e6\'82\'e8\'81\'41FileSorter \'82\'cc\'93\'ae\'8d\'ec\'82\'f0\'83\'4a\'83\'58\'83\'5e\'83\'7d\'83\'43\'83\'59\'82\'c5\'82\'ab\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
The behavior of FileSorter can be costomized  by passing a script object which have folloing handlers to  ((<make_with_delegate>)) or ((<set_delegate>)).\
<!-- end locale -->\
\cf0 *)
\f1 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
\'8e\'51\'8f\'c6\'82\'b7\'82\'e9 Finder \'82\'cc\'95\'5c\'8e\'a6\'8c\'60\'8e\'ae\'82\'cc\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8c\'88\'92\'e8\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Return a folder of which view determine the sorting order.\
@description\
<!-- begin locale ja -->\
\'83\'66\'83\'74\'83\'48\'83\'8b\'83\'67\'81\'69\'82\'b1\'82\'cc\'83\'6e\'83\'93\'83\'68\'83\'89\'82\'aa\'8e\'c0\'91\'95\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'c8\'82\'a2\'8e\'9e\'81\'6a\'82\'c5\'82\'cd\'81\'41Finder \'82\'cc insertion location \'82\'c9\'82\'c8\'82\'e8\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
The default (i.e. when this handler is omitted.)  location is Finder' insertion location.\
<!-- end locale -->\
@result alias :\
<!-- begin locale ja -->\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc alias\
<!-- begin locale en -->an alias of a folder<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 resolve_container\cf0 ()
\f1 \
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 try
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate\cf0 's
\f1  
\f0 \cf4 resolve_container\cf0 ()
\f1 \
			
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0 \
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf2 error
\f1 \cf0  
\f0 \cf3 number
\f1 \cf0  
\f0 -1708
\f1 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 --\cf5 log "obtain insertion location in resolve_container in FileSorter"
\f1 \cf0 \
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 try
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 insertion location
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf2 error
\f1 \cf0  
\f0 --\cf5  error when front window is in serarch mode.
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf2 first
\f1 \cf0  
\f0 \cf3 Finder window
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \
		\
		
\f0 \cf2 if
\f1 \cf0  
\f0 \cf3 class
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
			
\f0 \cf2 if
\f1 \cf0  
\f0 ((\cf4 a_location
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 Unicode text\cf0 )
\f1  
\f0 \cf2 ends with
\f1 \cf0  
\f0 ":")
\f1  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 is_package
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 package folder
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 (\cf3 info for
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 without
\f1 \cf0  
\f0 \cf3 size\cf0 )
\f1 \
				
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 is_package
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 (\cf3 folder
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_location\cf0 )
\f1  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
				
\f0 \cf2 else
\f1 \cf0 \
					
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
				
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
			
\f0 \cf2 else
\f1 \cf0 \
				
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 (\cf3 folder
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_location\cf0 )
\f1  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \
	
\f0 --\cf5 log a_location
\f1 \cf0 \
	
\f0 \cf2 set
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _target_container
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 resolve_container
\f1 \cf0 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
\'83\'5c\'81\'5b\'83\'67\'82\'b7\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b/\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'f0\'8c\'88\'92\'e8\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
Return a list of files and folders to be sort.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
\'82\'b1\'82\'cc\'83\'6e\'83\'93\'83\'68\'83\'89\'82\'f0\'8f\'c8\'97\'aa\'82\'b7\'82\'e9\'82\'c6\'81\'41((<resolve_container>)) \'82\'c5\'95\'d4\'82\'b3\'82\'ea\'82\'bd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'c9\'8a\'dc\'82\'dc\'82\'ea\'82\'e9\'8d\'80\'96\'da\'82\'b7\'82\'d7\'82\'c4\'82\'f0\'8e\'e6\'93\'be\'82\'b5\'82\'c4\'83\'5c\'81\'5b\'83\'67\'82\'b5\'82\'dc\'82\'b7\'81\'42\
<!-- begin locale en -->\
When this handler is omitted, all items in the folder returned by ((<resolve_container>)) are sorted.\
<!-- end locale -->\
@param a_location (alias) : \
<!-- begin locale ja -->((<resolve_container>)) \'82\'cc\'95\'d4\'82\'e8\'92\'6c \
<!-- begin locale en -->The returned value form ((<resolve_container>))\
<!-- end locale -->\
@result list :\
<!-- begin locale ja -->\'83\'5c\'81\'5b\'83\'67\'82\'b7\'82\'e9\'83\'74\'83\'40\'83\'43\'83\'8b/\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc\'83\'8a\'83\'58\'83\'67\
<!-- begin locale en -->a list of files and folder to be sorted.<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 target_items_at\cf0 (\cf4 a_location\cf0 )
\f1 \
	
\f0 --\cf5 log "start target_items_at"
\f1 \cf0 \
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 try
\f1 \cf0 \
			
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate\cf0 's
\f1  
\f0 \cf4 target_items_at\cf0 (\cf4 a_location\cf0 )
\f1 \
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf2 error
\f1 \cf0  
\f0 \cf3 number
\f1 \cf0  
\f0 -1708
\f1 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	
\f0 --\cf5 log a_location
\f1 \cf0 \
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf3 class
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 selection
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias list
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \
	
\f0 \cf2 else
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf3 list folder
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 without
\f1 \cf0  
\f0 \cf3 invisibles
\f1 \cf0 \
		
\f0 \cf2 set
\f1 \cf0  
\f0 \cf4 container_path
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 \cf4 a_location
\f1 \cf0  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 Unicode text
\f1 \cf0 \
		
\f0 \cf2 repeat
\f1 \cf0  
\f0 \cf2 with
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 in
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0 \
			
\f0 \cf2 set
\f1 \cf0  
\f0 \cf3 contents
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 an_item
\f1 \cf0  
\f0 \cf2 to
\f1 \cf0  
\f0 (\cf4 container_path
\f1 \cf0  
\f0 &
\f1  
\f0 \cf4 an_item\cf0 )
\f1  
\f0 \cf2 as
\f1 \cf0  
\f0 \cf3 alias
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 repeat
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 a_list
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 target_items_at
\f1 \cf0 \
\

\f0 (*\cf5 !@abstruct\
<!-- begin locale ja -->\
\'83\'41\'83\'43\'83\'52\'83\'93\'95\'5c\'8e\'a6\'82\'cc\'8e\'9e\'81\'41\'8d\'73\'95\'fb\'8c\'fc\'82\'c5\'83\'5c\'81\'5b\'83\'67\'82\'b7\'82\'e9\'82\'a9\'81\'42\
<!-- begin locale en -->\
Whether items will be sorted in row wise, when the view is the icon view.\
<!-- end locale -->\
@description\
<!-- begin locale ja -->\
((<resolve_container>)) \'82\'c5\'95\'d4\'82\'b3\'82\'ea\'82\'bd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'aa\'81\'41\'89\'bd\'82\'a9\'82\'e7\'82\'cc\'91\'ae\'90\'ab\'82\'c5\'95\'c0\'82\'d1\'91\'d6\'82\'a6\'82\'aa\'8d\'73\'82\'ed\'82\'ea\'82\'c4\'82\'a2\'82\'c8\'82\'a2\'83\'41\'83\'43\'83\'52\'83\'93\'95\'5c\'8e\'a6\'82\'cc\'8f\'ea\'8d\'87\'82\'c9\'8c\'c4\'82\'ce\'82\'ea\'82\'dc\'82\'b7\'81\'42\
\
delegate \'82\'c9\'82\'b1\'82\'cc\'83\'6e\'83\'93\'83\'68\'83\'89\'82\'aa\'8e\'c0\'91\'95\'82\'b3\'82\'ea\'82\'c4\'82\'a2\'82\'c8\'82\'a2\'82\'c6\'82\'ab\'82\'cd\'81\'41label position \'82\'c9\'82\'b5\'82\'bd\'82\'aa\'82\'c1\'82\'c4\'81\'41\'83\'5c\'81\'5b\'83\'67\'95\'fb\'8c\'fc\'82\'aa\'8c\'88\'92\'e8\'82\'b3\'82\'ea\'82\'dc\'82\'b7\'81\'42\
* bottom \'82\'cc\'8e\'9e\'81\'41\'8d\'73\'95\'fb\'8c\'fc\'82\'cc\'83\'5c\'81\'5b\'83\'67\
* right \'82\'cc\'8e\'9e\'81\'41\'97\'f1\'95\'fb\'8c\'fc\'82\'cc\'83\'5c\'81\'5b\'83\'67\
<!-- begin locale en -->\
This handler is called, when the view of the folder returned from ((<resolve_container>)) is an icon view not arranged by a property.\
\
If this handler is omitted, the sort direction (row wise or column wise) is determined by the label position property.\
* bottom : row wise\
* right : column wise\
<!-- end locale -->\
@param view_options (Finder's Finder window's icon view options) :\
<!-- begin locale ja -->\
resolve_container \'82\'c5\'95\'d4\'82\'b3\'82\'ea\'82\'bd\'83\'74\'83\'48\'83\'8b\'83\'5f\'82\'cc icon view options property\
<!-- begin locale en -->\
The icon view options property of the folder returned from resolve_container.\
<!-- end locale -->\
@result boolean :\
<!-- begin locale ja -->true \'82\'f0\'95\'d4\'82\'b5\'82\'bd\'82\'e7\'8d\'73\'95\'fb\'8c\'fc\'82\'c9\'83\'5c\'81\'5b\'83\'67\
<!-- begin locale en -->sorted in row wise when true is returned.<!-- end locale -->\
\cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 is_rowwise_for_iconview\cf0 (\cf4 view_options\cf0 )
\f1 \
	
\f0 --\cf5 log "start is_rowwise_for_iconview"
\f1 \cf0 \
	
\f0 \cf2 if
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf2 not
\f1 \cf0  
\f0 \cf3 missing value
\f1 \cf0  
\f0 \cf2 then
\f1 \cf0 \
		
\f0 \cf2 try
\f1 \cf0 \
			
\f0 \cf2 return
\f1 \cf0  
\f0 \cf2 my
\f1 \cf0  
\f0 \cf4 _delegate\cf0 's
\f1  
\f0 \cf4 is_rowwise_for_iconview\cf0 (\cf4 view_options\cf0 )
\f1 \
		
\f0 \cf2 on
\f1 \cf0  
\f0 \cf2 error
\f1 \cf0  
\f0 \cf4 msg
\f1 \cf0  
\f0 \cf3 number
\f1 \cf0  
\f0 \cf4 errno
\f1 \cf0 \
			
\f0 \cf2 if
\f1 \cf0  
\f0 \cf4 errno
\f1 \cf0  
\f0 \cf2 is not
\f1 \cf0  
\f0 \cf2 in
\f1 \cf0  
\f0 \{-1700,
\f1  
\f0 -1708\}
\f1  
\f0 \cf2 then
\f1 \cf0 \
				
\f0 \cf2 error
\f1 \cf0  
\f0 \cf4 msg
\f1 \cf0  
\f0 \cf3 number
\f1 \cf0  
\f0 \cf4 errno
\f1 \cf0 \
			
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
		
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 if
\f1 \cf0 \
	\
	
\f0 \cf2 tell
\f1 \cf0  
\f0 \cf3 application
\f1 \cf0  
\f0 "Finder"
\f1 \
		
\f0 \cf2 return
\f1 \cf0  
\f0 \cf3 label position
\f1 \cf0  
\f0 \cf2 of
\f1 \cf0  
\f0 \cf4 view_options
\f1 \cf0  
\f0 \cf2 is
\f1 \cf0  
\f0 \cf3 bottom
\f1 \cf0 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 tell
\f1 \cf0 \
	\

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 is_rowwise_for_iconview
\f1 \cf0 \
\

\f0 (*\cf5  private \cf0 *)
\f1 \

\f0 \cf2 on
\f1 \cf0  
\f0 \cf4 debug\cf0 ()
\f1 \
	
\f0 \cf3 boot
\f1 \cf0  
\f0 (\cf3 module loader\cf0 )
\f1  
\f0 \cf3 for
\f1 \cf0  
\f0 \cf2 me
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 sorted_items\cf0 ()
\f1 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf4 debug
\f1 \cf0 \
\

\f0 \cf2 on
\f1 \cf0  
\f0 \cf3 run
\f1 \cf0  
\f0 --\cf5 test code
\f1 \cf0 \
	
\f0 \cf2 return
\f1 \cf0  
\f0 \cf4 debug\cf0 ()
\f1 \
	
\f0 \cf2 try
\f1 \cf0 \
		
\f0 \cf3 show helpbook
\f1 \cf0  
\f0 (\cf3 path to
\f1 \cf0  
\f0 \cf2 me\cf0 )
\f1  
\f0 \cf2 with
\f1 \cf0  
\f0 \cf3 recovering InfoPlist
\f1 \cf0 \
	
\f0 \cf2 on
\f1 \cf0  
\f0 \cf2 error
\f1 \cf0  
\f0 \cf4 msg
\f1 \cf0  
\f0 \cf3 number
\f1 \cf0  
\f0 \cf4 errno
\f1 \cf0 \
		
\f0 \cf3 display alert
\f1 \cf0  
\f0 (\cf4 msg
\f1 \cf0  
\f0 &
\f1  
\f0 \cf3 return
\f1 \cf0  
\f0 &
\f1  
\f0 \cf4 errno\cf0 )
\f1 \
	
\f0 \cf2 end
\f1 \cf0  
\f0 \cf2 try
\f1 \cf0 \

\f0 \cf2 end
\f1 \cf0  
\f0 \cf3 run
\f1 \cf0 \
}